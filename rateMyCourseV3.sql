DROP DATABASE IF EXISTS RATEMYCOURSE;

CREATE DATABASE IF NOT EXISTS RATEMYCOURSE;
USE RATEMYCOURSE;

CREATE TABLE IF NOT EXISTS COURSE(

  COURSE_ID CHAR(10) NOT NULL,
  COURSE_NAME VARCHAR(50) NOT NULL,
  COLLEGE VARCHAR(50) NOT NULL,
  COURSE_DESCRIPTION VARCHAR(2000),
  CONSTRAINT PK_FULLID PRIMARY KEY (COURSE_ID,COLLEGE)

  );


CREATE TABLE IF NOT EXISTS PREREQUISITE(

  PREREQUISITE_ID CHAR(10) NOT NULL,
  COURSE_ID CHAR(10) NOT NULL REFERENCES COURSE(PK_FULLID)

  );
CREATE TABLE IF NOT EXISTS USERS(

  USERNAME VARCHAR(30) NOT NULL,
  USER_PASSWORD VARCHAR(20) NOT NULL,
  EMAIL VARCHAR(100) NOT NULL,
  FIRST_NAME VARCHAR(30) NOT NULL,
  LAST_NAME VARCHAR(30) NOT NULL,
  PRIVILEGE_LEVEL SMALLINT NOT NULL,
  CONSTRAINT PK_USERID PRIMARY KEY (USERNAME,EMAIL)

  );

CREATE TABLE IF NOT EXISTS USER_COMMENT(


  COMMENT_CATEGORY DECIMAL(1) NOT NULL,
  USERNAME VARCHAR(30) NOT NULL REFERENCES USERS(PK_USERID) ,
  COMMENT_BODY VARCHAR(10000) NOT NULL,
  COMMENT_DATE DATE NOT NULL,
  COMMENT_RATING DECIMAL(1) NULL,
  COURSE_ID CHAR(10) NOT NULL REFERENCES COURSE(PK_FULLID),
  CONSTRAINT PK_COMMENTID PRIMARY KEY (USERNAME,COURSE_ID)

  );


CREATE TABLE IF NOT EXISTS COURSE_RATINGS(

  LEVEL_OF_DIFFICULTY DECIMAL (1) NOT NULL,
  RECOMMENDED DECIMAL(1),
  COURSE_ID CHAR(10) NOT NULL REFERENCES COURSE(PK_FULLID),
  USERNAME VARCHAR(30) NOT NULL REFERENCES USERS(PK_USERID),
  CONSTRAINT PK_RATINGID PRIMARY KEY (COURSE_ID,USERNAME)


);


CREATE TABLE IF NOT EXISTS REPORTS(

  REPORT_NUMBER DECIMAL(10) NOT NULL UNIQUE,
  REPORTER_FIRSTNAME VARCHAR(30) NOT NULL,
  REPORTER_LASTNAME VARCHAR(30) NOT NULL,
  REPORTER_USERID VARCHAR(50) NULL REFERENCES USERS(PK_USERID),
  EMAIL VARCHAR(30) NOT NULL ,
  REPORT_DATE DATE NOT NULL,
  REPORT_MESSAGE VARCHAR(10000) NOT NULL,
  REPORTED_COMMENT_ID DECIMAL(10) NOT NULL REFERENCES USER_COMMENT (PK_COMMENT_ID),
  CONSTRAINT PK_REPORTID PRIMARY KEY (REPORTED_COMMENT_ID, REPORTER_FIRSTNAME, REPORTER_LASTNAME, EMAIL)

  );
