DROP DATABASE IF EXISTS RateMyCourse;

create DATABASE IF NOT EXISTS RateMyCourse;
USE RateMyCourse;

CREATE TABLE if NOT EXISTS COURSE(

  COURSE_ID CHAR(10) NOT NULL,
  COURSE_NAME VARCHAR(50) NOT NULL,
  COLLEGE VARCHAR(50) NOT NULL,
  COURSE_DESCRIPTION VARCHAR(2000),
  CONSTRAINT pk_FullID PRIMARY KEY (COURSE_ID,COLLEGE)

  );


CREATE TABLE if NOT EXISTS PREREQUISITE(

  PREREQUISITE_ID CHAR(10) NOT NULL,
  COURSE_ID CHAR(10) NOT NULL REFERENCES COURSE(pk_FullID)

  );
CREATE TABLE if NOT EXISTS USERS(

  USERNAME VARCHAR(30) NOT NULL,
  USER_PASSWORD VARCHAR(20) NOT NULL,
  EMAIL VARCHAR(100) NOT NULL,
  FIRST_NAME VARCHAR(30) NOT NULL,
  LAST_NAME VARCHAR(30) NOT NULL,
  PRIVILEGE_LEVEL SMALLINT NOT NULL
  CONSTRAINT pk_UserID PRIMARY KEY (USERNAME,EMAIL)

  );

CREATE TABLE if NOT EXISTS USER_COMMENT(

 
  COMMENT_CATEGORY DECIMAL(1) NOT NULL,
  USERNAME VARCHAR(30) NOT NULL REFERENCES USERS(pk_UserID) FOREIGN KEY,
  COMMENT_BODY VARCHAR(10000) NOT NULL,
  COMMENT_DATE DATE NOT NULL,
  COMMENT_RATING DECIMAL(1) NULL,
  COURSE_ID CHAR(10) NOT NULL REFERENCES COURSE(pk_FullID),
  CONSTRAINT pk_CommentID PRIMARY KEY (USERNAME,COURSE_ID)

  );


CREATE TABLE if NOT EXISTS COURSE_RATINGS(

  LEVEL_OF_DIFFICULTY DECIMAL (1) NOT NULL,
  RECOMMENDED DECIMAL(1),
  COURSE_ID CHAR(10) NOT NULL REFERENCES COURSE(pk_FullID),
  USERNAME VARCHAR(30) NOT NULL REFERENCES USERS(pk_UserID),
  CONSTRAINT pk_RatingID PRIMARY KEY (COURSE_ID,pk_UserID)


);


CREATE TABLE if NOT EXISTS REPORTS(

  REPORT_NUMBER DECIMAL(10) NOT NULL UNIQUE,
  REPORTER_FIRSTNAME VARCHAR(30) NOT NULL,
  REPORTER_LASTNAME VARCHAR(30) NOT NULL,
  REPORTER_UserID VARCHAR(50) NULL REFERENCES USERS(pk_UserID),
  EMAIL VARCHAR(30) NOT NULL ,
  REPORT_DATE DATE NOT NULL,
  REPORT_MESSAGE VARCHAR(10000) NOT NULL,
  REPORTED_COMMENT_ID DECIMAL(10) NOT NULL REFERENCES USER_COMMENT (pk_COMMENT_ID),
  CONSTRAINT pk_ReportID PRIMARY KEY (REPORTED_COMMENT_ID, REPORTER_FIRSTNAME, REPORTERLASTNAME, EMAIL)

  );
